// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sampleZ_cpp
List sampleZ_cpp(const IntegerVector& n, const NumericVector& p, double delta, const List& neighbor_list, const List& G_list);
RcppExport SEXP _nicknamer_sampleZ_cpp(SEXP nSEXP, SEXP pSEXP, SEXP deltaSEXP, SEXP neighbor_listSEXP, SEXP G_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const List& >::type neighbor_list(neighbor_listSEXP);
    Rcpp::traits::input_parameter< const List& >::type G_list(G_listSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleZ_cpp(n, p, delta, neighbor_list, G_list));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nicknamer_sampleZ_cpp", (DL_FUNC) &_nicknamer_sampleZ_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_nicknamer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
